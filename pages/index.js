import Head from "next/head";
import { CreateGameForm } from "../components/CreateGame";
import { ActiveGames } from "../components/ActiveGames";
import styled from "styled-components";
import { useState } from "react";
import { nanoid } from "nanoid";
import { MyButton } from "../components/Button";

export default function Home() {
  const [myGames, setMyGames] = useState([]);

  function newGame({ gameName, gamePlayers }) {
    const newGame = {
      nameOfGame: gameName,
      players: gamePlayers.map((name) => ({
        name: name,
        score: 0,
        id: nanoid(),
      })),
      isActive: true,
      gameId: nanoid(),
    };

    setMyGames([...myGames, newGame]);
  }

  function increase(playerid, gameid) {
    const thisGame = myGames.find((element) => element.gameId === gameid);

    const thisPlayer = thisGame.players.find(
      (element) => element.id === playerid
    );
    const newScore = thisPlayer.score + 1;
    const playersNew = thisGame.players.map((element) =>
      element === thisPlayer ? { ...thisPlayer, score: newScore } : element
    );

    const thisGameNew = { ...thisGame, players: playersNew };
    setMyGames(
      myGames.map((element) => (element === thisGame ? thisGameNew : element))
    );
  }

  function decrease(playerid, gameid) {
    const thisGame = myGames.find((element) => element.gameId === gameid);

    const thisPlayer = thisGame.players.find(
      (element) => element.id === playerid
    );
    const newScore = thisPlayer.score - 1;
    const playersNew = thisGame.players.map((element) =>
      element === thisPlayer ? { ...thisPlayer, score: newScore } : element
    );

    const thisGameNew = { ...thisGame, players: playersNew };
    setMyGames(
      myGames.map((element) => (element === thisGame ? thisGameNew : element))
    );
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <FlexFrame>
          <CreateGameFrame>
            <CreateGameForm newGame={newGame} />
          </CreateGameFrame>
          <ActiveGamesFrame>
            <ActiveGames
              myGames={myGames}
              increase={increase}
              decrease={decrease}
            />
          </ActiveGamesFrame>
        </FlexFrame>
      </main>
    </div>
  );
}

const FlexFrame = styled.div`
  display: flex;
  padding: 3rem;
  gap: 3rem;
`;

const CreateGameFrame = styled.div`
  width: 500px;
  display: flex;
  padding-top: 2rem;
  border: 2px dotted gray;
  padding: 1rem;
`;

const ActiveGamesFrame = styled.div`
  width: 500px;
  display: flex;
  padding-top: 2rem;
  border: 2px dotted gray;
  padding: 1rem;
`;
